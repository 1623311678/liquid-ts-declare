{
  "Jekyll frontmatter": {
    "prefix": "--",
    "description": "Jekyll: Frontmatter",
    "body": [
      "---",
      "$2",
      "---"
    ]
  },
  "Tag if": {
    "prefix": "if",
    "description": "Control flow tag: if",
    "body": ["{% if ${1:condition} %}", "\t$2", "{% endif %}"]
  },
  "Tag else": {
    "prefix": "else",
    "description": "Control flow tag: else",
    "body": ["{% else %}", "\t"]
  },
  "Tag elsif": {
    "prefix": "elsif",
    "description": "Control flow tag: elsif",
    "body": ["{% elsif ${1:condition} %}", "\t"]
  },
  "Tag if else": {
    "prefix": "ifelse",
    "description": "Control flow tag: if else",
    "body": ["{% if ${1:condition} %}", "\t$2", "{% else %}", "\t$3", "{% endif %}"]
  },
  "Tag unless": {
    "prefix": "unless",
    "description": "Control flow tag: unless",
    "body": ["{% unless ${1:condition} %}", "\t$2", "{% endunless %}"]
  },
  "Tag case": {
    "prefix": "case",
    "description": "Control flow tag: case",
    "body": ["{% case ${1:variable} %}", "\t{% when ${2:condition} %}", "\t\t$3", "\t{% else %}", "\t\t$4", "{% endcase %}"]
  },
  "Tag when": {
    "prefix": "when",
    "description": "Control flow tag: when",
    "body": ["{% when ${1:condition} %}", "$0"]
  },
  "Tag cycle": {
    "prefix": "cycle",
    "description": "Iteration tag: cycle",
    "body": ["{% cycle '${1:odd}', '${2:even}' %}"]
  },
  "Tag cycle group": {
    "prefix": "cyclegroup",
    "description": "Iteration tag: cycle group",
    "body": ["{% cycle '${1:group name}': '${2:odd}', '${3:even}' %}"]
  },
  "Tag for": {
    "prefix": "for",
    "description": "Iteration tag: for",
    "body": ["{% for ${1:item} in ${2:collection} %}", "\t$3", "{% endfor %}"]
  },
  "Tag Option limit": {
    "prefix": "limit",
    "description": "For loops option",
    "body": ["limit: ${1:5}"]
  },
  "Tag Option offset": {
    "prefix": "offset",
    "description": "For loops option",
    "body": ["offset: ${1:0}"]
  },
  "Tag Option reversed": {
    "prefix": "reversed",
    "description": "For loops option",
    "body": ["reversed"]
  },
  "Tag break": {
    "prefix": "break",
    "description": "Iteration tag: break",
    "body": ["{% break %}"]
  },
  "Tag continue": {
    "prefix": "continue",
    "description": "Iteration tag: continue",
    "body": ["{% continue %}"]
  },
  "Tag tablerow": {
    "prefix": "tablerow",
    "description": "Iteration tag: tablerow",
    "body": ["{% tablerow ${1:item} in ${2:collection} cols: ${3:2} %}", "\t$4", "{% endtablerow %}"]
  },
  "Tag assign": {
    "prefix": "assign",
    "description": "Variable tag: assign",
    "body": ["{% assign ${1:variable} = ${2:value} %}"]
  },
  "Tag increment": {
    "prefix": "increment",
    "description": "Variable tag: increment",
    "body": ["{% increment ${1:variable} %}"]
  },
  "Tag decrement": {
    "prefix": "decrement",
    "description": "Variable tag: decrement",
    "body": ["{% decrement ${1:variable} %}"]
  },
  "Tag capture": {
    "prefix": "capture",
    "description": "Variable tag: capture",
    "body": ["{% capture ${1:variable} %}$2{% endcapture %}"]
  },
  "Tag include": {
    "prefix": "include",
    "description": "Theme tag: include",
    "body": ["{% include '${1:snippet}' %}"]
  },
  "Tag include with parameters": {
    "prefix": "includewith",
    "description": "Theme tag: include with parameters",
    "body": ["{% include '${1:snippet}', ${2:variable}: ${3:value} %}"]
  },
  "Tag section": {
    "prefix": "section",
    "description": "Theme tag: section",
    "body": ["{% section '${1:snippet}' %}"]
  },
  "Tag raw": {
    "prefix": "raw",
    "description": "Theme tag: raw",
    "body": ["{% raw %}$1{% endraw %}"]
  },
  "Tag layout": {
    "prefix": "layout",
    "description": "Theme tag: layout",
    "body": ["{% layout '${1:layout}' %}"]
  },
  "Tag no layout": {
    "prefix": "layoutnone",
    "description": "Theme tag: layout none",
    "body": ["{% layout none %}"]
  },
  "Tag paginate": {
    "prefix": "paginate",
    "description": "Theme tag: paginate",
    "body": ["{% paginate ${1:collection.products} by ${2:12} %}", "\t{% for ${3:product} in ${1:collection.products} %}", "\t\t$4", "\t{% endfor %}", "{% endpaginate %}"]
  },
  "Liquid Tag stylesheet": {
    "prefix": "stylesheet",
    "description": "Stylesheet tag: stylesheet",
    "body": ["{% stylesheet %}", "\t$1", "{% endstylesheet %}"]
  },
  "Liquid Tag stylesheet for scss": {
    "prefix": "stylesheet_scss",
    "description": "Stylesheet tag: stylesheet for scss",
    "body": ["{% stylesheet '${1:scss}' %}", "\t$2", "{% endstylesheet %}"]
  },
  "Liquid Tag javascript": {
    "prefix": "javascript",
    "description": "Javascript tag: javascript",
    "body": ["{% javascript %}", "\t$1", "{% endjavascript %}"]
  },
  "Tag comment, whitespaced": {
    "prefix": "comment-",
    "description": "Comment tag: comment, whitespaced",
    "body": ["{%- comment -%}$1{%- endcomment -%}"]
  },
  "Tag if, whitespaced": {
    "prefix": "if-",
    "description": "Control flow tag: if, whitespaced",
    "body": ["{%- if ${1:condition} -%}", "\t$2", "{%- endif -%}"]
  },
  "Tag else, whitespaced": {
    "prefix": "else-",
    "description": "Control flow tag: else, whitespaced",
    "body": ["{%- else -%}", "\t"]
  },
  "Tag elsif, whitespaced": {
    "prefix": "elsif-",
    "description": "Control flow tag: elsif, whitespaced",
    "body": ["{%- elsif ${1:condition} -%}", "\t"]
  },
  "Tag if else, whitespaced": {
    "prefix": "ifelse-",
    "description": "Control flow tag: if else, whitespaced",
    "body": ["{%- if ${1:condition} -%}", "\t$2", "{%- else -%}", "\t$3", "{%- endif -%}"]
  },
  "Tag unless, whitespaced": {
    "prefix": "unless-",
    "description": "Control flow tag: unless, whitespaced",
    "body": ["{%- unless ${1:condition} -%}", "\t$2", "{%- endunless -%}"]
  },
  "Tag case, whitespaced": {
    "prefix": "case-",
    "description": "Control flow tag: case, whitespaced",
    "body": ["{%- case ${1:variable} -%}", "\t{%- when ${2:condition} -%}", "\t\t$3", "\t{%- else -%}", "\t\t$4", "{%- endcase -%}"]
  },
  "Tag when, whitespaced": {
    "prefix": "when-",
    "description": "Control flow tag: when, whitespaced",
    "body": ["{%- when ${1:condition} -%}", "$0"]
  },
  "Tag cycle, whitespaced": {
    "prefix": "cycle-",
    "description": "Iteration tag: cycle, whitespaced",
    "body": ["{%- cycle '${1:odd}', '${2:even}' -%}"]
  },
  "Tag cycle group, whitespaced": {
    "prefix": "cyclegroup-",
    "description": "Iteration tag: cycle group, whitespaced",
    "body": ["{%- cycle '${1:group name}': '${2:odd}', '${3:even}' -%}"]
  },
  "Tag for, whitespaced": {
    "prefix": "for-",
    "description": "Iteration tag: for, whitespaced",
    "body": ["{%- for ${1:item} in ${2:collection} -%}", "\t$3", "{%- endfor -%}"]
  },
  "Tag continue, whitespaced": {
    "prefix": "continue-",
    "description": "Iteration tag: continue, whitespaced",
    "body": ["{%- continue -%}"]
  },
  "Tag tablerow, whitespaced": {
    "prefix": "tablerow-",
    "description": "Iteration tag: tablerow, whitespaced",
    "body": ["{%- tablerow ${1:item} in ${2:collection} cols: ${3:2} -%}", "\t$4", "{%- endtablerow -%}"]
  },
  "Tag assign, whitespaced": {
    "prefix": "assign-",
    "description": "Variable tag: assign, whitespaced",
    "body": ["{%- assign ${1:variable} = ${2:value} -%}"]
  },
  "Tag capture, whitespaced": {
    "prefix": "capture-",
    "description": "Variable tag: capture, whitespaced",
    "body": ["{%- capture ${1:variable} -%}$2{%- endcapture -%}"]
  },
  "Filter join": {
    "prefix": "join",
    "description": "Array filter: join",
    "body": "| join: '${1:, }'"
  },
  "Filter first": {
    "prefix": "first",
    "description": "Array filter: first",
    "body": "| first"
  },
  "Filter last": {
    "prefix": "last",
    "description": "Array filter: last",
    "body": "| last"
  },
  "Filter concat": {
    "prefix": "concat",
    "description": "Array filter: concat",
    "body": "| concat: ${1:array}"
  },
  "Filter map": {
    "prefix": "map",
    "description": "Array filter: map",
    "body": "| map: '${1:key}'"
  },
  "Filter reverse": {
    "prefix": "reverse",
    "description": "Array filter or String filter: reverse",
    "body": "| reverse"
  },
  "Filter size": {
    "prefix": "size",
    "description": "Array filter: size",
    "body": "| size"
  },
  "Filter sort": {
    "prefix": "sort",
    "description": "Array filter: sort",
    "body": "| sort: '${1:key}'"
  },
  "Filter uniq": {
    "prefix": "uniq",
    "description": "Array filter: uniq",
    "body": "| uniq"
  },
  "Filter img tag": {
    "prefix": "img_tag",
    "description": "HTML filter: img tag",
    "body": "| img_tag"
  },
  "Filter img tag with parameters": {
    "prefix": "img_tag_param",
    "description": "HTML filter: img tag with parameters",
    "body": "| img_tag: '${1:alt}', '${2:class}'"
  },
  "Filter script tag": {
    "prefix": "script_tag",
    "description": "HTML filter: script tag",
    "body": "| script_tag"
  },
  "Filter stylesheet tag": {
    "prefix": "stylesheet_tag",
    "description": "HTML filter: stylesheet tag",
    "body": "| stylesheet_tag"
  },
  "Filter abs": {
    "prefix": "abs",
    "description": "Math filter: abs",
    "body": "| abs"
  },
  "Filter ceil": {
    "prefix": "ceil",
    "description": "Math filter: ceil",
    "body": "| ceil"
  },
  "Filter divided by": {
    "prefix": "divided_by",
    "description": "Math filter: divided by",
    "body": "| divided_by: ${1:2}"
  },
  "Filter floor": {
    "prefix": "floor",
    "description": "Math filter: floor",
    "body": "| floor"
  },
  "Filter minus": {
    "prefix": "minus",
    "description": "Math filter: minus",
    "body": "| minus: ${1:1}"
  },
  "Filter plus": {
    "prefix": "plus",
    "description": "Math filter: plus",
    "body": "| plus: ${1:1}"
  },
  "Filter round": {
    "prefix": "round",
    "description": "Math filter: round",
    "body": "| round: ${1:0}"
  },
  "Filter times": {
    "prefix": "times",
    "description": "Math filter: times",
    "body": "| times: ${1:1}"
  },
  "Filter modulo": {
    "prefix": "modulo",
    "description": "Math filter: modulo",
    "body": "| modulo: ${1:2}"
  },
  "Filter money": {
    "prefix": "money",
    "description": "Money filter: money",
    "body": "| money"
  },
  "Filter money with currency": {
    "prefix": "money_with_currency",
    "description": "Money filter: money with currency",
    "body": "| money_with_currency"
  },
  "Filter money without trailing zeros": {
    "prefix": "money_without_trailing_zeros",
    "description": "Money filter: money without trailing zeros",
    "body": "| money_without_trailing_zeros"
  },
  "Filter money without currency": {
    "prefix": "money_without_currency",
    "description": "Money filter: money without currency",
    "body": "| money_without_currency"
  },
  "Filter append": {
    "prefix": "append",
    "description": "String filter: append",
    "body": "| append: '${1:string}'"
  },
  "Filter camelcase": {
    "prefix": "camelcase",
    "description": "String filter: camelcase",
    "body": "| camelcase"
  },
  "Filter capitalize": {
    "prefix": "capitalize",
    "description": "String filter: capitalize",
    "body": "| capitalize"
  },
  "Filter downcase": {
    "prefix": "downcase",
    "description": "String filter: downcase",
    "body": "| downcase"
  },
  "Filter escape": {
    "prefix": "escape",
    "description": "String filter: escape",
    "body": "| escape"
  },
  "Filter handleize": {
    "prefix": "handleize",
    "description": "String filter: handleize",
    "body": "| handleize"
  },
  "Filter md5": {
    "prefix": "md5",
    "description": "String filter: md5",
    "body": "| md5"
  },
  "Filter newline to br": {
    "prefix": "newline_to_br",
    "description": "String filter: newline to br",
    "body": "| newline_to_br"
  },
  "Filter pluralize": {
    "prefix": "pluralize",
    "description": "String filter: pluralize",
    "body": "| pluralize: '${1:item}', '${2:items}'"
  },
  "Filter prepend": {
    "prefix": "prepend",
    "description": "String filter: prepend",
    "body": "| prepend: '${1:string}'"
  },
  "Filter remove": {
    "prefix": "remove",
    "description": "String filter: remove",
    "body": "| remove: '${1:string}'"
  },
  "Filter remove first": {
    "prefix": "remove_first",
    "description": "String filter: remove first",
    "body": "| remove_first: '${1:string}'"
  },
  "Filter replace": {
    "prefix": "replace",
    "description": "String filter: replace",
    "body": "| replace: '${1:target}', '${2:replace}'"
  },
  "Filter replace first": {
    "prefix": "replace_first",
    "description": "String filter: replace first",
    "body": "| replace_first: '${1:target}', '${2:replace}'"
  },
  "Filter slice": {
    "prefix": "slice",
    "description": "String filter: slice",
    "body": "| slice: ${1:0}, ${2:5}"
  },
  "Filter slice single character": {
    "prefix": "slice_single",
    "description": "String filter: slice with single parameter",
    "body": "| slice: ${1:at}"
  },
  "Filter split": {
    "prefix": "split",
    "description": "String filter: split",
    "body": "| split: '${1:,}'"
  },
  "Filter strip": {
    "prefix": "strip",
    "description": "String filter: strip",
    "body": "| strip"
  },
  "Filter lstrip": {
    "prefix": "lstrip",
    "description": "String filter: lstrip",
    "body": "| lstrip"
  },
  "Filter rstrip": {
    "prefix": "rstrip",
    "description": "String filter: rstrip",
    "body": "| rstrip"
  },
  "Filter strip html": {
    "prefix": "strip_html",
    "description": "String filter: strip html",
    "body": "| strip_html"
  },
  "Filter strip newlines": {
    "prefix": "strip_newlines",
    "description": "String filter: strip newlines",
    "body": "| strip_newlines"
  },
  "Filter truncate": {
    "prefix": "truncate",
    "description": "String filter: truncate",
    "body": "| truncate: ${1:20}, '${2:...}'"
  },
  "Filter truncatewords": {
    "prefix": "truncatewords",
    "description": "String filter: truncatewords",
    "body": "| truncatewords: ${1:5}, '${2:...}'"
  },
  "Filter upcase": {
    "prefix": "upcase",
    "description": "String filter: upcase",
    "body": "| upcase"
  },
  "Filter url encode": {
    "prefix": "url_encode",
    "description": "String filter: url encode",
    "body": "| url_encode"
  },
  "Filter url escape": {
    "prefix": "url_escape",
    "description": "String filter: url escape",
    "body": "| url_escape"
  },
  "Filter url param escape": {
    "prefix": "url_param_escape",
    "description": "String filter: url param escape",
    "body": "| url_param_escape"
  },
  "Filter asset url": {
    "prefix": "asset_url",
    "description": "URL filter: asset url",
    "body": "| asset_url"
  },
  "Filter asset img url": {
    "prefix": "asset_img_url",
    "description": "URL filter: asset img url",
    "body": "| asset_img_url: '${1:medium}'"
  },
  "Filter img url": {
    "prefix": "img_url",
    "description": "URL filter: img url",
    "body": "| img_url: '${1:medium}'"
  },
  "Section tag": {
    "prefix": "schema",
    "description": "Section Tag: schema",
    "body": [
      "{% schema %}",
      "{",
      "\t$0",
      "}",
      "{% endschema %}"
    ]
  },
  "Schema, name": {
    "description": "Schema property: \"name\"",
    "prefix": "schema: name",
    "body": "\"name\": \"$1\"$0"
  },
  "Schema, tag": {
    "description": "Schema property: \"tag\"",
    "prefix": "schema: tag",
    "body": "\"tag\": \"${1|article,aside,div,footer,header,section|}\",${2:,}"
  },
  "Schema, class": {
    "description": "Schema property: \"class\"",
    "prefix": "schema: class",
    "body": "\"class\": \"$1\"${2:,}$0"
  },
  "Schema, settings": {
    "prefix": "schema: settings",
    "description": "Schema property: \"settings\"",
    "body": [
      "\"settings\": [",
      "\t$0",
      "]"
    ]
  },
  "Schema, max blocks": {
    "description": "Schema property: \"max_blocks\"",
    "prefix": "schema: max_blocks",
    "body": "\"max_blocks\": ${1:5}${2:,}$0"
  },
  "Schema, type": {
    "description": "Schema settings property: \"type\"",
    "prefix": "schema: type",
    "body": "\"type\": \"${2|header,paragraph,text,textarea,image_picker,radio,select,checkbox,range,color,font_picker,collection,product,blog,page,link_list,url,video_url,richtext,html,article|}\""
  },
  "Schema, placeholder": {
    "description": "Schema settings property: \"placeholder\"",
    "prefix": "schema: placeholder",
    "body": "\"placeholder\": \"$1\"${2:,}$0"
  },
  "Schema, info": {
    "description": "Schema settings property: \"info\"",
    "prefix": "schema: info",
    "body": "\"info\": \"$1\"${2:,}$0"
  },
  "Schema, default": {
    "description": "Schema property: \"default\"",
    "prefix": "schema: default",
    "body": "\"default\": \"$1\"${2:,}$0"
  },
  "Schema, header": {
    "description": "Schema input setting: \"header\"",
    "prefix": "schema: header",
    "body": [
      "{",
      "\t\"type\": \"header\",",
      "\t\"content\": \"$1\"${2:,\n\t\"info\": \"$3\"}${4:,}",
      "}${5:,}$0"
    ]
  },
  "Schema, paragraph": {
    "description": "Schema input setting: \"paragraph\"",
    "prefix": "schema: paragraph",
    "body": [
      "{",
      "\t\"type\": \"paragraph\",",
      "\t\"content\": \"$1\"",
      "}${2:,}$0"
    ]
  },
  "Schema, text": {
    "description": "Schema input setting: \"text\"",
    "prefix": "schema: text",
    "body": [
      "{",
      "\t\"type\": \"text\",",
      "\t\"id\": \"${1:id}\",",
      "\t\"label\": \"${2:label}\"${3:,\n\t\"default\": \"$4\"}${5:,\n\t\"info\": \"$6\"}${7:,\n\t\"placeholder\": \"$8\"}",
      "}${9:,}$0"
    ]
  },
  "Schema, textarea": {
    "description": "Schema input setting: \"textarea\"",
    "prefix": "schema: textarea",
    "body": [
      "{",
      "\t\"type\": \"textarea\",",
      "\t\"id\": \"${1:id}\",",
      "\t\"label\": \"${2:label}\"${3:,\n\t\"default\": \"$4\"}${5:,\n\t\"info\": \"$6\"}${7:,\n\t\"placeholder\": \"$8\"}",
      "}${9:,}$0"
    ]
  },
  "Schema, richtext": {
    "description": "Schema input setting: \"richtext\"",
    "prefix": "schema: richtext",
    "body": [
      "{",
      "\t\"type\": \"richtext\",",
      "\t\"id\": \"${1:id}\",",
      "\t\"label\": \"${2:label}\"${3:,\n\t\"default\": \"$4\"}${5:,\n\t\"info\": \"$6\"}",
      "}${7:,}$0"
    ]
  },
  "Schema, select": {
    "description": "Schema input setting: \"select\"",
    "prefix": "schema: select",
    "body": [
      "{",
      "\t\"type\": \"select\",",
      "\t\"id\": \"${1:id}\",",
      "\t\"label\": \"${2:label}\",",
      "\t\"options\": [",
      "\t\t{",
      "\t\t\t\"value\": \"$3\",",
      "\t\t\t\"label\": \"$4\"${5:,\n\t\t\t\"group\": \"$6\"}",
      "\t\t}",
      "\t]",
      "}${7:,}$0"
    ]
  },
  "Schema, radio": {
    "description": "Schema input setting: \"radio\"",
    "prefix": "schema: radio",
    "body": [
      "{",
      "\t\"type\": \"radio\",",
      "\t\"id\": \"${1:id}\",",
      "\t\"label\": \"${2:label}\",${3:\n\t\"default\": \"$4\",}${5:\n\t\"info\": \"$6\",}",
      "\t\"options\": [",
      "\t\t{",
      "\t\t\t\"value\": \"$7\",",
      "\t\t\t\"label\": \"$8\"",
      "\t\t}",
      "\t]",
      "}${9:,}$0"
    ]
  },
  "Schema, option": {
    "description": "Schema input select/radio option setting",
    "prefix": "schema: select/radio option",
    "body": [
      "{",
      "\t\"value\": \"$1\",",
      "\t\"label\": \"$2\"${3:,\n\t\"group\": \"$4\"}",
      "}${5:,}$0"
    ]
  },
  "Schema, checkbox": {
    "description": "Schema input setting: \"checkbox\"",
    "prefix": "schema: checkbox",
    "body": [
      "{",
      "\t\"type\": \"checkbox\",",
      "\t\"id\": \"${1:id}\",",
      "\t\"label\": \"${2:label}\"${3:,\n\t\"default\": \"${4:true}\"}${5:,\n\t\"info\": \"$6\"}",
      "}${7:,}"
    ]
  },
  "Schema, range": {
    "description": "Schema input setting: \"range\"",
    "prefix": "schema: range",
    "body": [
      "{",
      "\t\"type\": \"range\",",
      "\t\"id\": \"${1:id}\",",
      "\t\"label\": \"${2:label}\",",
      "\t\"unit\": \"${3:unit}\",",
      "\t\"min\": ${4:1},",
      "\t\"max\": ${5:10},",
      "\t\"step\": ${6:1},",
      "\t\"default\": ${7:1}",
      "}${8:,}$0"
    ]
  },
  "Schema, image picker": {
    "description": "Schema input setting: \"image_picker\"",
    "prefix": "schema: image_picker",
    "body": [
      "{",
      "\t\"type\": \"image_picker\",",
      "\t\"id\": \"${1:id}\",",
      "\t\"label\": \"${2:label}\"",
      "}${3:,}$0"
    ]
  },
  "Schema, link list": {
    "description": "Schema input setting: \"link_list\"",
    "prefix": "schema: link_list",
    "body": [
      "{",
      "\t\"type\": \"link_list\",",
      "\t\"id\": \"${1:id}\",",
      "\t\"label\": \"${2:label}\"${3:,\n\t\"default\": \"$4\"}${5:,\n\t\"info\": \"$6\"}",
      "}${7:,}$0"
    ]
  },
  "Schema, color": {
    "description": "Schema input setting: \"color\"",
    "prefix": "schema: color",
    "body": [
      "{",
      "\t\"type\": \"color\",",
      "\t\"id\": \"${1:id}\",",
      "\t\"label\": \"${2:label}\"${3:,\n\t\"default\": \"#$4\"}${5:,\n\t\"info\": \"$6\"}",
      "}${7:,}$0"
    ]
  },
  "Schema, font picker": {
    "description": "Schema input setting: \"font_picker\"",
    "prefix": "schema: font_picker",
    "body": [
      "{",
      "\t\"type\": \"font_picker\",",
      "\t\"id\": \"${1:id}\",",
      "\t\"label\": \"${2:label}\"${3:,\n\t\"default\": \"#$4\"}${5:,\n\t\"info\": \"$6\"}",
      "}${7:,}$0"
    ]
  },
  "Schema, collection": {
    "description": "Schema input setting: \"collection\"",
    "prefix": "schema: collection",
    "body": [
      "{",
      "\t\"type\": \"collection\",",
      "\t\"id\": \"${1:id}\",",
      "\t\"label\": \"${2:label}\"${3:,\n\t\"info\": \"$4\"}",
      "}${5:,}$0"
    ]
  },
  "Schema, product": {
    "description": "Schema input setting: \"product\"",
    "prefix": "schema: product",
    "body": [
      "{",
      "\t\"type\": \"product\",",
      "\t\"id\": \"${1:id}\",",
      "\t\"label\": \"${2:label}\"${3:,\n\t\"info\": \"$4\"}",
      "}${5:,}$0"
    ]
  },
  "Schema, blog": {
    "description": "Schema input setting: \"blog\"",
    "prefix": "schema: blog",
    "body": [
      "{",
      "\t\"type\": \"blog\",",
      "\t\"id\": \"${1:id}\",",
      "\t\"label\": \"${2:label}\"${3:,\n\t\"info\": \"$4\"}",
      "}${5:,}$0"
    ]
  },
  "Schema, article": {
    "description": "Schema input setting: \"article\"",
    "prefix": "schema: article",
    "body": [
      "{",
      "\t\"type\": \"article\",",
      "\t\"id\": \"${1:id}\",",
      "\t\"label\": \"${2:label}\"${3:,\n\t\"info\": \"$4\"}",
      "}${5:,}$0"
    ]
  },
  "Schema, page": {
    "description": "Schema input setting: \"page\"",
    "prefix": "schema: page",
    "body": [
      "{",
      "\t\"type\": \"page\",",
      "\t\"id\": \"${1:id}\",",
      "\t\"label\": \"${2:label}\"${3:,\n\t\"info\": \"$4\"}",
      "}${5:,}$0"
    ]
  },
  "Schema, url": {
    "description": "Schema input setting: \"url\"",
    "prefix": "schema: url",
    "body": [
      "{",
      "\t\"type\": \"url\",",
      "\t\"id\": \"${1:id}\",",
      "\t\"label\": \"${2:label}\"${3:,\n\t\"default\": \"$4\"}",
      "}${5:,}$0"
    ]
  },
  "Schema, video url": {
    "description": "Schema input setting: \"video_url\"",
    "prefix": "schema: video_url",
    "body": [
      "{",
      "\t\"type\": \"video_url\",",
      "\t\"id\": \"$1\",",
      "\t\"accept\": [",
      "\t\t${2:\"youtube\"}${4:,}${3:\n\t\t\"vimeo\"}",
      "\t],",
      "\t\"label\": \"${5:label}\"${6:,\n\t\"default\": \"$7\"}${8:,\n\t\"info\": \"$9\"}${10:,\n\t\"placeholder\": \"$11\"}",
      "}${12:,}$0"
    ]
  },
  "Schema, html": {
    "description": "Schema input setting: \"html\"",
    "prefix": "schema: html",
    "body": [
      "{",
      "\t\"type\": \"html\",",
      "\t\"id\": \"${1:id}\",",
      "\t\"label\": \"${2:label}\"${3:,\n\t\"info\": \"$4\"}",
      "}${5:,}$0"
    ]
  },
  "Schema, presets": {
    "description": "Schema property: \"presets\"",
    "prefix": "schema: presets",
    "body": [
      "\"presets\": [",
      "\t{",
      "\t\t\"category\": \"$1\",",
      "\t\t\"name\":\"$2\"",
      "\t}",
      "]${4:,}$0"
    ]
  }
}
